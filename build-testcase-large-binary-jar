. ./.gh-api-examples.conf
normal=$(tput sgr0)
highlight=$(tput setaf 2)

printf "$highlight"

cat << EOF

  ________            ____                         
 /_  __/ /_  ___     / __ \____ _      _____  _____
  / / / __ \/ _ \   / /_/ / __ \ | /| / / _ \/ ___/
 / / / / / /  __/  / ____/ /_/ / |/ |/ /  __/ /    
/_/ /_/ /_/\___/  /_/    \____/|__/|__/\___/_/     

EOF

printf "${normal}"
                                                   
 printf "${highlight} - Creating repo: ${normal}"
./create-repo-testrepo.sh | jq -r '.name'

 printf "${highlight} - Adding team to repo (team_slug must be set in your .gh-api-examples.conf file)${normal}\n"
./add-team-to-repo.sh

 printf "${highlight} - Creating webhook: ${normal}"
./create-webhook.sh  | jq -r '.id'

 printf "${highlight} - Creating docs/README.md: ${normal}"
./create-commit-readme.sh | jq -r ".content.html_url"

 printf "${highlight} - Creating simple workflow file: ${normal}"
./create-commit-workflow-simple.sh | jq -r ".content.html_url"

 printf "${highlight} - Creating CODEOWNERS: ${normal}"
./create-commit-codeowners.sh| jq -r ".content.html_url"

 printf "${highlight} - Creating requirements.txt: ${normal}"
./create-commit-python-pip.sh| jq -r ".content.html_url"
sleep 2

 printf "${highlight} - Creating new branch: ${normal}"
./create-branch-newbranch.sh | jq -r '.url'

 printf "${highlight} - Creating a commit on the new branch: ${normal}"
./create-commit-on-new-branch.sh | jq -r ".content.html_url"

 printf "${highlight} - Creating an update commit to docs/README.md: ${normal}"
./create-commit-update-readme.sh | jq -r ".content.html_url"

 printf "${highlight} - Creating an issue: ${normal}"
./create-repo-issue.sh | jq -r '.html_url'

 printf "${highlight} - Creating a pull request: ${normal}"
./create-pull-request.sh | jq -r '.html_url'

 printf "${highlight} - Setting branch protection rules on default branch: ${normal}"
./set-branch-protection.sh | jq -r '.url'

 printf "${highlight} - Creating a release: ${normal}"
./create-release.sh  | jq -r '.html_url'

 printf "${highlight} - Adding a .gitattributes file to new branch: ${normal}"
./create-commit-gitattributes.sh | jq -r ".content.html_url"

 printf "${highlight} - Adding a large jar file to new branch: ${normal}"
./create-commit-jarfile.sh > tmp/create-commit-jarfile-output.json
     
jq -r '
"name = \(.content.name)
size = \(.content.size)
content_sha = \(.content.sha)
commit_sha = \(.commit.sha)"' tmp/create-commit-jarfile-output.json

content_sha=$(jq -r '.content.sha' n.json)

./clone-default-repo.sh 2>/dev/null


printf "${highlight} ------------------------------------------------------- ${normal}\n"
printf "${highlight}           cd to repo and run git-sizer: ${normal}\n"
cd src/$repo
git-sizer --verbose

printf "${highlight} ------------------------------------------------------- ${normal}\n"
echo ".ref-contains $org/$repo $content_sha"
printf "${highlight} ------------------------------------------------------- ${normal}\n"


